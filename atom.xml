<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TQ的独立博客</title>
  <icon>http://www.gravatar.com/avatar/6c5f7c2b2fbcac68a5f7ae53a4682124</icon>
  <subtitle>No one is king for long.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tqtan.cafe/"/>
  <updated>2023-10-05T03:53:56.942Z</updated>
  <id>https://tqtan.cafe/</id>
  
  <author>
    <name>tqtan</name>
    <email>targetkillering@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>拖拽粘性小红球Canvas实现</title>
    <link href="https://tqtan.cafe/2016/03/27/drag-a-ball/"/>
    <id>https://tqtan.cafe/2016/03/27/drag-a-ball/</id>
    <published>2016-03-27T09:15:21.000Z</published>
    <updated>2023-10-05T03:53:56.942Z</updated>
    
    <content type="html"><![CDATA[<p>相信大家都见过之前手机QQ中神奇的“<a href="https://isux.tencent.com/qq-mobile-off-duty.html" target="_blank" rel="external">一键下班</a>”功能，如图：</p><p><img src="http://storyincafe.com/blogpics/drag-a-ball-1.png" alt="一键下班示意图"></p><p>它通过一种优雅的方式，去掉QQ上的所有消息通知红点：用户可以拖拽粘性的小球来删除红点，动画符合用户心理预期。详情请看<a href="(https://isux.tencent.com/qq-mobile-off-duty.html">ISUX文章</a>介绍，本文借鉴于此。</p><p>这个创意十分棒，但是它是基于客户端实现的。对于这个带粘性的弹性小球其实可以用在很多方面，例如loading动画、下拉刷新提示、横屏提示、按钮反馈等等，因此有必要实现一个前端版本。<br><small style="color:#999;">没错，这是一个教程贴，客官按需往下看。</small></p><p>那么先看看效果：<a href="http://storyincafe.com/drag-a-ball.html" target="_blank" rel="external">点击demo</a>，打开后试试拖拉小球儿，也可以点击左上角的辅助线看看小球的轨迹～<br><small style="color:#999;">(请用手机查看)</small></p><p><img src="http://storyincafe.com/blogpics/drag-a-ball-2.png" alt="粘性小球拖拽效果"></p><h3 id="开始动手"><a href="#开始动手" class="headerlink" title="开始动手"></a>开始动手</h3><blockquote><p>生成小球</p></blockquote><p>这是最简单的一步，只需要用到<code>Canvas.arc(x,y,radius,start_angle,end_angle)</code>这一个方法，绘制一个小圆点位于画布中心，作为今天的主角。</p><blockquote><p>监听方法</p></blockquote><p>拖拽的过程需要用到移动端的touch事件，分别需要监听拖拽前、中、后三个过程。</p><figure class="highlight"><pre><font face="monospace">canvas.addEventListener(&apos;touchstart&apos;,dragStart);canvas.addEventListener(&apos;touchmove&apos;,draging);canvas.addEventListener(&apos;touchstart&apos;,dragEnd);</font></pre></figure><blockquote><p>拖拽前DragStart</p></blockquote><p>由于采用Canvas实现，监听都是绑定在整个画布上，因此需要实时判断开始拖拽的时候手指是否按在小球上。</p><p>这里需要用到两点间距离公式：</p><div style="width:300px;"><img src="http://storyincafe.com/blogpics/drag-a-ball-3.jpg" alt="两点间距离公式"></div><p>获取手指触点的x和y，然后根据公式判断与小球圆点的距离是否大于小圆半径Radius，则可判断是否在小球上。注意这里需要加上一个边缘容差值move_rest，确保手指在边缘也能拖动小球。</p><figure class="highlight"><pre><font face="monospace">//&#x8FB9;&#x7F18;&#x5BB9;&#x5DEE;var move_rest = 20;//&#x89E6;&#x70B9;&#x5750;&#x6807;var x = e.touches[0].clientX;var y = e.touches[0].clientY;// &#x8BA1;&#x7B97;&#x662F;&#x5426;&#x5728;&#x5706;&#x5185;var distance = Math.sqrt(Math.pow(x-oX,2)+Math.pow(y-oY,2));// &#x6807;&#x5FD7;&#x4F4D;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x62D6;&#x52A8;is_canMove = (distance-move_rest) &gt; oRadius ? false : true;</font></pre></figure><blockquote><p>拖拽时Draging</p></blockquote><p>拖拽时需要小球伴随着手指的运动而运动，因此需要在手指触点位置绘制一个一摸一样的小球，这跟绘制中心小球一样简单。</p><p>然而，如何建立小球和中心小球的联系呢？</p><h4 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h4><p>先建立两者连接，以两圆间相切点连成线，如下图所示：</p><div style="max-width:500px;"><img src="http://storyincafe.com/blogpics/drag-a-ball-4.jpg" alt="拖拽时方案1"></div><p>这个比较简单，因为拖动夹角固定为90度（两圆平行的切点），获取两圆之间与水平坐标的夹角就可以算出四个切点的坐标，最后再连线就行了。<br>注意这里需要判断拖动的小球相对中心小球处于第几象限，从而确定切点。<br><figure class="highlight"><pre><font face="monospace">// &#x8BA1;&#x7B97;&#x4E24;&#x5706;&#x4E4B;&#x95F4;&#x4E0E;&#x6C34;&#x5E73;&#x5750;&#x6807;&#x7684;&#x5939;&#x89D2;var angle = Math.atan(Math.abs(y - toY)/Math.abs(x - toX));// &#x8BA1;&#x7B97;&#x56DB;&#x4E2A;&#x5207;&#x70B9;&#x5750;&#x6807;&#xFF0C;&#x62D6;&#x52A8;&#x5706;&#x5706;&#x5FC3;(toX,toY)&#xFF0C;&#x4E2D;&#x5FC3;&#x5706;&#x5706;&#x5FC3;(x,y)&#xFF0C;a&#x4E3A;&#x62D6;&#x52A8;&#x5706;&#x4E24;&#x4E2A;&#x5207;&#x70B9;&#xFF0C;b&#x4E3A;&#x4E2D;&#x5FC3;&#x5706;&#x4E24;&#x4E2A;&#x5207;&#x70B9;&lt;!-- &#x7B2C;&#x56DB;&#x8C61;&#x9650;&#xFF0C;&#x62D6;&#x52A8;&#x5706;&#x5728;&#x4E2D;&#x5FC3;&#x5706;&#x53F3;&#x4E0B;&#x89D2;&#xFF0C;&#x5176;&#x4ED6;&#x4E09;&#x4E2A;&#x8C61;&#x9650;&#x7C7B;&#x63A8;... --&gt;var a1x = toX + Math.cos(Math.abs(Math.PI/2))*oRadius;var a1y = toY - Math.cos(Math.abs(Math.PI/2))*oRadius;var a2x = toX - Math.cos(Math.abs(Math.PI/2))*oRadius;var a2y = toY + Math.cos(Math.abs(Math.PI/2))*oRadius;var b1x = x + Math.cos(Math.abs(Math.PI/2))*oRadius;var b1y = y - Math.cos(Math.abs(Math.PI/2))*oRadius;var b2x = x - Math.cos(Math.abs(Math.PI/2))*oRadius;var b2y = y + Math.cos(Math.abs(Math.PI/2))*oRadius;</font></pre></figure></p><p>然而，这样无论如何拉伸小圆都是直直的，没有粘性的效果，怎么办呢？</p><h4 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h4><p>想要增加粘性效果，需要把相连的直线改为<a href="http://baike.baidu.com/view/60154.htm" target="_blank" rel="external">贝塞尔曲线</a>。</p><p>写过CSS动画的人应该都对它不陌生，因为<code>animation-timing-function</code>可以通过定义贝塞尔值来实现动画过程中速率的自由变化。</p><p>如图，一条贝塞尔曲线最少由三个点组成，分别是起点P0、终点P3和控制点P1,P2，其中控制点可以有一个或两个。<br><img src="http://storyincafe.com/blogpics/drag-a-ball-5.png" alt="贝塞尔曲线示意图"></p><p>对应于Canvas，也有相应的贝塞尔方法：</p><ul><li><p>一个控制点</p><figure class="highlight"><pre><font face="monospace">context.quadraticCurveTo(cpx,cpy,x,y);</font></pre></figure></li><li><p>两个控制点</p><figure class="highlight"><pre><font face="monospace">context.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);</font></pre></figure></li></ul><p>这次我们只需要使用一个控制点，也就是使用<code>quadraticCurveTo</code>方法就可以了。<br>至于如何定义这次的控制点？</p><p>如图，我们如果要定目标圆(a1x,a1y)和中心圆(b1x,b1y)的控制点，就以目标圆另一个点(a2x,a2y)与中心圆(b1x,b1y)连线的中心作为控制点，另一条线同理。</p><div style="max-width:500px;"><img src="http://storyincafe.com/blogpics/drag-a-ball-6.jpg" alt="定贝塞尔曲线控制点"></div><p>注意，可以看到最后呈现出来的曲线并不是如图通过三点的白色曲线，那是因为贝塞尔曲线并不是简单的三点连线，实则上不会经过控制点，这三点最后确定的点就是如图橙色的曲边。</p><p>确定了三个点，于是就可以画线了：<br><figure class="highlight"><pre><font face="monospace">// &#x8BA1;&#x7B97;&#x63A7;&#x5236;&#x70B9;var c1x = (a2x + b1x) / 2;var c1y = (a2y + b1y) / 2;// &#x5148;&#x79FB;&#x5230;&#x5F00;&#x59CB;&#x70B9;context.moveTo(a1x,a1y);// &#x6839;&#x636E;&#x76EE;&#x6807;&#x70B9;&#x548C;&#x63A7;&#x5236;&#x70B9;&#x753B;&#x51FA;&#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;context.quadraticCurveTo(c1x,c1y,b1x,b1y);</font></pre></figure></p><p>看起来差不多了，然而在两圆中间曲线变化的时候发现速率还是不自然，是缺了点什么？</p><h4 id="方案3"><a href="#方案3" class="headerlink" title="方案3"></a>方案3</h4><p>我们开始假设拖动夹角固定为90度，但这是不符合拖动力度变化的，因此我们可以做一个优化，随着拖动距离越远，拖动夹角应该越小。注意，不能无限期地变小，需要有一个最低夹角。</p><div style="max-width:500px;"><img src="http://storyincafe.com/blogpics/drag-a-ball-7.jpg" alt="拖动夹角示例图"></div><p>于是在基础上加一点代码优化拖动：</p><figure class="highlight"><pre><font face="monospace">var base_angle = Math.PI;//&#x57FA;&#x51C6;&#x5F27;&#x5EA6;var distance_angle = Math.PI / 800;//&#x51CF;&#x89D2;&#x529B;&#x5EA6;&#xFF0C;&#x6BCF;&#x79FB;&#x52A8;1px&#x8DDD;&#x79BB;&#x51CF;&#x5C11;&#x7684;&#x5F27;&#x5EA6;&#x503C;var distance_angle_limit = Math.PI * 3/4;//&#x6700;&#x5C0F;&#x57FA;&#x51C6;&#x5F27;&#x5EA6;var Bangle = base_angle - distance*distance_angle;if(Bangle &lt; distance_angle_limit){&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Bangle = distance_angle_limit;}// &#x56E0;&#x6B64;&#x4E24;&#x5706;&#x7684;&#x56DB;&#x4E2A;&#x5207;&#x70B9;&#x9700;&#x8981;&#x52A0;&#x51CF;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x504F;&#x79FB;&#x503C;dis_x1 = Math.cos(Math.abs(Bangle/2-angle))*oRadius;dis_y1 = Math.sin(Bangle/2-angle)*oRadius;dis_x2 = Math.cos(Math.abs(Math.PI-Bangle/2-angle))*oRadius;dis_y2 = Math.sin(Math.PI-Bangle/2-angle)*oRadius;</font></pre></figure><blockquote><p>拖拽后DragEnd</p></blockquote><p>拖拽后就需要回弹小球，只需要记录这时候拖动球的圆心坐标，然后执行回弹函数就行了。</p><blockquote><p>回弹动画</p></blockquote><p>回弹动画使用了<a href="https://github.com/tweenjs/tween.js" target="_blank" rel="external">Tween.js</a>，只需要定义好开始的位置（拖动球圆心）以及目标位置（中心圆圆心），选择合适的动画缓动函数，再更新动画函数<code>bounceUpdate</code>即可。</p><figure class="highlight"><pre><font face="monospace">// &#x9009;&#x62E9;&#x7F13;&#x52A8;&#x51FD;&#x6570;var bounce_animate_type = TWEEN.Easing.Elastic.Out;// &#x8C03;&#x7528;Tween.js&#xFF0C;&#x58F0;&#x660E;&#x5F00;&#x59CB;&#x548C;&#x7ED3;&#x675F;&#x4F4D;&#x7F6E;&#x3002;coords = { x: last_x, y: last_y };tween = new TWEEN.Tween(coords)&#xA0;&#xA0;&#xA0;&#xA0;.to({ x: oX, y: oY }, bounce_duration_time)&#xA0;&#xA0;&#xA0;&#xA0;.easing(bounce_animate_type)&#xA0;&#xA0;&#xA0;&#xA0;.onUpdate(bounceUpdate)&#xA0;&#xA0;&#xA0;&#xA0;.start();bounceAnimate();// RAF&#x786E;&#x4FDD;&#x52A8;&#x753B;&#x6D41;&#x7545;&#x8FD0;&#x884C;function bounceAnimate(time) {&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;requestAnimationFrame(bounceAnimate);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;TWEEN.update(time);}</font></pre></figure><p>这里最关键是<code>bounceUpdate</code>函数，它的实现方法其实也很简单，与拖动球时Draging时候一样，但是x和y不再是手指触摸点，而是Tween.js计算的数值coords.x和coords.y。</p><figure class="highlight"><pre><font face="monospace">// &#x66F4;&#x65B0;&#x52A8;&#x753B;&#x51FD;&#x6570;function bounceUpdate(){&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;// &#x8BE5;&#x65F6;&#x523B;&#x5F39;&#x884C;&#x4F4D;&#x7F6E;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x = coords.x;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;y = coords.y;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#x4E4B;&#x540E;&#x5C31;&#x8DDF;Draging&#x4E00;&#x6837;}</font></pre></figure><p>至此，整个拖拽返弹效果就实现了。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>偶尔写写教程贴也是一种消化过程呀，有问题欢迎留言。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;相信大家都见过之前手机QQ中神奇的“&lt;a href=&quot;https://isux.tencent.com/qq-mobile-off-duty.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一键下班&lt;/a&gt;”功能，如图：&lt;/p&gt;
&lt;p&gt;&lt;img s
      
    
    </summary>
    
      <category term="demo" scheme="https://tqtan.cafe/categories/demo/"/>
    
    
      <category term="canvas" scheme="https://tqtan.cafe/tags/canvas/"/>
    
      <category term="demo" scheme="https://tqtan.cafe/tags/demo/"/>
    
      <category term="前端" scheme="https://tqtan.cafe/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="教程" scheme="https://tqtan.cafe/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>2015年终总结</title>
    <link href="https://tqtan.cafe/2016/01/01/summary-2015/"/>
    <id>https://tqtan.cafe/2016/01/01/summary-2015/</id>
    <published>2015-12-31T17:57:24.000Z</published>
    <updated>2023-10-05T03:53:56.943Z</updated>
    
    <content type="html"><![CDATA[<p><em><strong>No one will be king for long</strong></em> 原本是在编程界中表示没有任何一家语言能一家独大，连扩张明显的Javascript都不可能适用于所有场景。这用于我们日常也是一样的，没有谁会因为学会了某项技能，就可以一直运用得很好，相反却会因为<strong>越来越多的变化和竞争让你跟不上这项技能</strong>。这一句话一直影响了我一年，让我对<code>养成习惯</code>的重要性有了更深刻的认识。</p><p>然而，对着荒废的尤克里里，<a href="http://tqtan.com/2015/01/01/summary-2014/" target="_blank" rel="external">吹过的牛逼</a>还是将自己变傻逼了。</p><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p>今年是自己正式工作的一整年，我收获最大的是<code>事务管理</code>和<code>善用科技提升效率</code>两件事。</p><blockquote><p>事务管理</p></blockquote><p>能力越大，责任越大，事情会伴随着你熟悉业务而不断增多。<br>一些数字：</p><ul><li>负责社交平台营收组的日常需求，平均需求每周1.5个，做最多的是H5页面。</li><li>发掘日常痛点，开发了5个工具来加强效率，分别在数据沉淀、社交分享、多终端调试、动画流程、页面性能等方面有所优化。</li><li>写了5篇文章和做了10多次技术分享，其中几篇文章在<a href="http://isux.tencent.com/category/fd" target="_blank" rel="external">ISUX官博</a>反响不错。</li><li>做了不少其他的尝试，例如托尼托尼学习小组开展、外包管理接口人、官网SEO建设、实习生培养等。</li></ul><p>数字的意义是总结，得益最大的是锻炼了<strong>事务管理</strong>。</p><h5 id="关于记录"><a href="#关于记录" class="headerlink" title="关于记录"></a><span style="color:#e74c3c">关于记录</span></h5><p>我会使用文档和应用软件来<strong>记录工作进度，并实时截图</strong>，这件事看起来挺麻烦的，但是却避免了之后产生的所有麻烦，也很好地避免了重复性工作。</p><h5 id="关于沟通"><a href="#关于沟通" class="headerlink" title="关于沟通"></a><span style="color:#e74c3c">关于沟通</span></h5><p>在日常工作中避免不了的是沟通和会议，这两点十分浪费时间，但却十分有必要。改进方法是<strong>把沟通文档化</strong>。</p><p>例如之前产品经理和设计师发现一个问题就给你打一通电话，在我建议后改成了半天/一天一个体验文档。因此流程变成：对方下班前交付<code>鬼吹灯0912修改意见－产品.doc</code>、<code>鬼吹灯0912修改意见－设计.doc</code>，我修改后交付<code>鬼吹灯0912修改结果.zip</code>。</p><p>对于会议，将相关会议合并，控制次数，同时需要在会议前准备好<strong>会议资料和会议目标</strong>，确保进行沟通会议的每个人都能高效。</p><h5 id="关于总结"><a href="#关于总结" class="headerlink" title="关于总结"></a><span style="color:#e74c3c">关于总结</span></h5><p>写工作日报十分必要，可以简单到只是给自己看，几个关键词，几句话也行。关键是要看得出变化，并<strong>实时发现问题</strong>。同时项目结束可以考虑是否能工具化避免重复工作，是否能写成经验分享给更多人。总结的过程也是吸收项目精华的过程。</p><blockquote><p>善用科技提升效率</p></blockquote><p>每一个互联网者都应该对这个更加敏感，毕竟互联网造福人类啊～</p><ul><li>个人任务管理，我会使用<a href="https://www.wunderlist.com" target="_blank" rel="external">奇妙清单</a>，操作简单交互合理，一枚不错的todo-list。</li><li>团队工作时，我会使用<a href="https://trello.com/" target="_blank" rel="external">Trello</a>来记录项目问题和分工分时解决。</li><li>做策划和会议准备，我会使用<a href="https://docs.google.com/" target="_blank" rel="external">GoogleDocs</a>来记录，它比传统office的好处是全终端同步，多人实时编辑，断电都不怕啊！</li><li>保持在<a href="https://www.evernote.com" target="_blank" rel="external">印象笔记</a>写工作日报、生活随想、各种草稿，更加不怕断电啦啦啦。</li><li>使用<a href="http://vpnso.com/" target="_blank" rel="external">VPN</a>解决<del>翻墙</del>问题，不能说国内没精华，但是你却无法否认国内资料凌乱且不准确的问题。</li><li>使用<a href="http://www.apple.com/watch/" target="_blank" rel="external">iWatch</a>的Health和<a href="http://www.gotokeep.com/" target="_blank" rel="external">Keep</a>记录运动状况、健身进度，有数据更能帮助你强身健体哦。</li></ul><p>还有更多的应用例子，说起来可以巴拉巴拉一大堆。</p><p>如果没有现成工具，我也会偶尔开发一些工具来提升效率，例如<a href="http://tonytony.club/tool/h5viewer/" target="_blank" rel="external">H5VIEWER</a>解决H5多终端调试，<a href="https://tonytony.club/tool/share-check/" target="_blank" rel="external">分享预览工具</a>解决页面预览问题，<a href="https://github.com/targetkiller/Prefixer" target="_blank" rel="external">Prefixer</a>解决自动CSS前缀补全等等。做这些工具的另一个好处，就是积累一个又一个的<code>专利</code>，那是活生生的奖金啊。<br><del><small>当然有时候也会写一些自动抢票、淘宝自动领取插件啥的…</small></del></p><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p>可幸的是，工作并没有埋没我的生活。</p><blockquote><p>阅读</p></blockquote><p>今年看了挺多小说，除了繁重的<code>三体</code>，就是<a href="https://zh.wikipedia.org/zh/%E6%9D%B1%E9%87%8E%E5%9C%AD%E5%90%BE" target="_blank" rel="external">东野奎吾</a>先生的一系列书了，喜欢在稍闲的周末晚到<code>西西弗书店</code>，借一本书看完归还，刚好一晚。</p><blockquote><p>咖啡</p></blockquote><p>喝的咖啡种类多了，得益于朋友们在各地旅游带给我的不同豆子。比较喜欢的是泰国冰咖啡，比较讨厌的是土耳其咖啡。</p><p>之前跟朋友计划合作做的<em><strong>#StoryInCafe#</strong></em>计划因为一些事情耽搁了，希望2016年把它实施起来，官网<a href="http://www.storyincafe.com/" target="_blank" rel="external">在这里</a>，目标是记录每一个咖啡店的故事，在世界各地的咖啡店认识志同道合的朋友。</p><blockquote><p>旅游</p></blockquote><p>去的地方比上年少了很多，年假反而积累了不少。<code>泰国</code>是个不错的地方，花钱可以像皇帝；<code>三亚</code>是个适合吃海鲜而不适合潜水的地方。</p><blockquote><p>摄影</p></blockquote><p>扔掉<code>尼康</code>，换上了<code>索尼</code>。保持着<a href="http://targetkiller.lofter.com/" target="_blank" rel="external">Lofter</a>的更新，也认识了很多爱摄影的好朋友。</p><p><small style="color:#777">2016开始接客片，有需要拍摄的请联系微信<code>targetkiller</code>。</small></p><p>用照片记录生活，新的一年要更耐心学习咔嚓，希望有更多好的照片。</p><h3 id="2015摄影集（明信片）"><a href="#2015摄影集（明信片）" class="headerlink" title="2015摄影集（明信片）"></a>2015摄影集（明信片）</h3><p><img src="http://storyincafe.com/blogpics/summary-2015-1.jpg" alt="tqtan2015明信片"><img src="http://storyincafe.com/blogpics/summary-2015-2.jpg" alt="tqtan2015明信片"></p><p>我把2015年摄影的部分作品制成了明信片。</p><p><span style="font-weight:bold;color:#e74c3c;">[FAREWELL TO NOTHING]</span><br><code>好的坏的，都是我人生的一部分，没有什么需要告别的。</code></p><p>若喜欢的朋友可在文章底下留下联系方式<small style="color:#34495e">（QQ/WECHAT）</small>，前十名我将会送上明信片(不包邮)。</p><h3 id="To-2016"><a href="#To-2016" class="headerlink" title="To 2016"></a>To 2016</h3><p>每一次总结都是自我进步，好的坏的都应该欣然接受。<br><code>2016，放下身段，俯冲飞行。</code></p><p><img src="http://storyincafe.com/blogpics/summary-2015-4.jpg" alt="tqtan"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;&lt;strong&gt;No one will be king for long&lt;/strong&gt;&lt;/em&gt; 原本是在编程界中表示没有任何一家语言能一家独大，连扩张明显的Javascript都不可能适用于所有场景。这用于我们日常也是一样的，没有谁会因为学会了某项技能，就可以
      
    
    </summary>
    
      <category term="个人" scheme="https://tqtan.cafe/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
      <category term="2015" scheme="https://tqtan.cafe/tags/2015/"/>
    
      <category term="年终总结" scheme="https://tqtan.cafe/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>H5动感影集性能分析</title>
    <link href="https://tqtan.cafe/2015/11/26/dynamic-album-performance-analysis/"/>
    <id>https://tqtan.cafe/2015/11/26/dynamic-album-performance-analysis/</id>
    <published>2015-11-25T16:25:54.000Z</published>
    <updated>2023-10-05T03:53:56.942Z</updated>
    
    <content type="html"><![CDATA[<p><em>“你听说过动感影集么?”</em></p><p><strong><code>动感影集</code></strong>是QQ空间新功能，可以将静态的图片轻松转变为动态的视频集，且载体是HTML5（简称H5）页面，意味着可以随时分享到空间或朋友圈给好友欣赏！<br><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151124192906_Dljw4gKEmH.png" alt></p><p>移动端区别于PC年代的相册视频，由于设备性能限制，每一个动画细节都需要认真优化，今天就来说说动感影集开发过程中的<strong>动画性能检测与优化</strong>的问题。</p><h3 id="1-先利其器-Chrome-Timeline-amp-Rendering"><a href="#1-先利其器-Chrome-Timeline-amp-Rendering" class="headerlink" title="1.先利其器 - Chrome Timeline&amp;Rendering"></a>1.先利其器 - Chrome Timeline&amp;Rendering</h3><p>性能分析前，我们先看看工具。Chrome浏览器带来的两个工具是发现性能问题的利器，它们是<code>Timeline</code>和<code>Rendering</code>。</p><blockquote><p>Timeline</p></blockquote><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151124192810_CB3Ah8MhMJ.png" alt></p><p><strong>Timeline</strong>是一款基于录制的工具，通过录制在浏览器中的一系列操作，系统会记录这个过程的所有细节数据，包括js计算、页面重绘、复合层消耗等，同时还保存着这个过程每一帧的截图。</p><p><strong>使用方法：</strong>打开Chrome开发者工具，选择Timeline。点击左上角小圆点录制操作，然后在要检测的页面上做一系列交互操作，结束后再次点击圆点停止，最后操作期间的一系列数据就会以图表等的形式呈现在面板中。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151124195608_svDLIrgx88.png" alt></p><p>它有四种事件，对应四个颜色。如下图，网络和DOM解析(蓝色)，JavaScript计算(黄色)，样式重计算和布局(紫色)以及绘画和合成(绿色)事件。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151124200344_afTsE0FIvR.png" alt></p><p>它有三个模式：<code>帧模式</code>、<code>事件模式</code>和<code>内存模式</code>。</p><p>（1）帧模式<br>帧模式需要选中帧视图(柱形图按钮)开启。该模式是检查动画性能最常用的模式。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151124202107_HGr89KHfMj.png" alt></p><p>注意到，帧查看器有两条分界线，分别是30fps和60fps。</p><p>这需要我们重温<strong>fps（每秒传输帧数）</strong>的概念：</p><ul><li>若动画表现fps大于60，则超越了人眼能反映的刷新频率；</li><li>如果fps小于30，则卡顿明显；</li></ul><p>也就是说fps要保证接近60才能保证流畅。<a href="http://www.30vs60fps.com/" target="_blank" rel="external">点击这里</a>可以看到30fps和60fps的明显区别。回归到帧模式柱状图，不难看出柱状图<strong>柱高越小表示动画越流畅</strong>。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151124203636_oollqmjylV.jpg" alt></p><p>同时通过点击柱状图还可以看到CPU、内存的详情，以及找到对应脚本和结点定位。</p><p><strong>基本用法：</strong></p><ul><li>点击录制-&gt;开始页面动画-&gt;结束录制</li><li>通过查看柱状图记录出哪些柱比较高（性能差）</li><li>点击柱图定位事件记录，结合详情数据找出性能卡顿的原因</li></ul><p>（2）事件模式和内存模式</p><p><strong>事件模式</strong>需要点击事件按钮开启（如图左侧蓝色），而<strong>内存模式</strong>是可以同时显示在帧模式或事件模式中，只需要勾选Memory面板即可。<br><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151124203918_wk5hzZFOwo.png" alt></p><p>事件模式是以事件为导向，观察录制间操作的事件经过，方便定位哪个操作占用的事件比较频繁。同时结合内存面板，可以看得出哪个事件消耗的内存最大，有没有合理地进行垃圾回收（GC）。</p><p>同时注意到这里勾选了<strong>Screenshots面板</strong>，这个面板记录了过程间的屏幕截图，更方便定位有性能问题的操作区间，发现问题所在。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151124205108_DVYDW7jy26.png" alt></p><blockquote><p>Rendering</p></blockquote><p>Rendering处于开发者工具的隐藏面板中，打开Chrome开发者工具然后按ESC键打开。<br><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125101219_9Zk4f9fISW.png" alt></p><p>它有四个功能：</p><ul><li><p><code>开启绘制闪烁提示</code>。这功能会让页面在渲染的时候闪烁绿色，你可以借此增删元素查看哪些元素是绘制消耗最大的。（该功能替代了旧版的Show paint rectangles+Enable continuous page repainting，Chrome46。）<br><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125112425_qKcDzhMuY6.png" alt></p></li><li><p><code>显示层块边框</code>。这功能会让所有层块元素展示黄色的边框，可以方便定位元素的布局是否合理。<br><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125112425_waJF7yvaQR.png" alt></p></li><li><p><code>显示FPS计量器</code>。这功能会在页面右上角展示一个FPS计量器，实时展示FPS数，可以方便地在做一系列操作的时候发现性能瓶颈卡在哪里。<br><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125112425_3hJRHFikFs.png" alt></p></li><li><p><code>展示滚动表现</code>。这功能是使页面滚动变得缓慢，对触摸和滚动事件的监听会使滚动延迟，可以通过这个功能查看滚动时期的瓶颈。<br><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125112425_Q8LyayMtNp.png" alt></p></li></ul><h3 id="2-洞察技巧-如何发现性能问题"><a href="#2-洞察技巧-如何发现性能问题" class="headerlink" title="2.洞察技巧 - 如何发现性能问题"></a>2.洞察技巧 - 如何发现性能问题</h3><p>上面说了性能分析的工具，下面应该说说检测动画性能问题的办法。动画性能分析主要用到Timeline<strong>帧模式</strong>+Rendering的<strong>开启绘制闪烁</strong>和<strong>显示层级边框</strong>功能。</p><blockquote><p>用法1：检查卡顿情况</p></blockquote><p>打开帧模式，点击录制按钮，开始录制页面操作，之后结束录制，查看柱状图。发现低于60fps的柱形，点击具体的帧率柱，查看记录详情，根据左边的信息定位问题所在，如下图：</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125155232_U9DhymwsNq.png" alt></p><blockquote><p>用法2：查看层级与多余布局块</p></blockquote><p>有时候感觉页面卡，可能会是因为层块多没有处理好显隐。可以通过功能面板的paint选项卡开启渲染截图。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125155630_pYaH7WsOv2.png" alt></p><p>该功能开启后，再次录制操作，结束后可以在<code>详细数据面板</code>看到每一个柱形图的即时渲染截图，通过移动和查找可以看出哪些块是不应该出现的，从而把它解决掉。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125155631_NE5KsOsXaF.png" alt></p><blockquote><p>用法3：查看多余或重复渲染的结点</p></blockquote><p>勾选Rendering中的Enable paint flashing和Show layer borders。直接操作页面，可以看到操作期间是否会有意料之外的块状渲染（渲染的结点会呈现绿色框框），若有问题则删除多余结点再次尝试，逐渐定位出有问题的结点。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125160704_xCODeW5Rte.png" alt></p><p><em>以上三个功能可以帮助你发现很多性能的问题。</em></p><h3 id="3-江湖事迹-动感影集性能案例"><a href="#3-江湖事迹-动感影集性能案例" class="headerlink" title="3.江湖事迹 - 动感影集性能案例"></a>3.江湖事迹 - 动感影集性能案例</h3><p>说了那么多，现在就来分享三个开发过程中的简单性能案例。</p><blockquote><p>1.封尾扩散动画</p></blockquote><p>动感影集的封尾页会用到一个通用的页尾，动画很简单，是一个圈圈由中间向两边扩散。实现也很快，马上会想到border动画，把border由0px-&gt;1000px，在PC看没问题，于是就有了这个。<br><img src="http://i5.tietuku.com/a9c1fae778f4553e.gif" alt></p><p>但是，在小米2S看的时候就发现结束的时候十分卡，看了下前面的元素都是渐现动画，不可能呀，于是用Timeline工具分析了一下。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200336_kGST6QzwaK.png" alt></p><p>各种绿色！说明是painting（渲染）引起的性能问题，因此毫无疑问是动画原因了。同时我还看了下Paint面板：</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200336_PquXVX1PsL.png" alt></p><p>发现了一个十分大的层在绘制（绿色部分），发现是bg-border这个结点的问题。于是我查看了该结点的动画：</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200358_VWTK07dHQQ.png" alt></p><p>会不会就是这个结点的border动画引起的？那试试换一种写法，我把border值固定，通过transform:scale来改变大小，实现了一样的效果。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200359_XSjxhbSeIn.png" alt></p><p>再看看timeline？</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200336_JUyGU1eF5m.png" alt></p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125202220_GvDzOgXiRS.png" alt></p><p>O.M.G！除了刚开始绘制的消耗外，其他时候已经不会产生太多严重消耗，总体FPS维持在60以上（十分流畅），而且层的大小也自然降了下来。</p><p><strong>结论：</strong> border动画在低端机器可能会产生性能问题，看情况使用其他方式代替。</p><blockquote><p>2.前景放大动画</p></blockquote><p>在邀请函模板里有一个前景由小变大的动画，但是在安卓机上产生了严重的渲染异常，如下图：</p><p><img src="http://i5.tietuku.com/2849791fdf2d159d.gif" alt></p><p>在IOS机器上没有重现，循例我查看了timeline。发现上面也没有异样，性能还是能保持流畅。那么问题出在哪里呢？</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200336_pmfKhcUkOs.png" alt></p><p>我查看了这区域的代码，这里是一个影集间的相片切换效果，其中上一个效果结束会加上一个.animate-b的类，作用了这个类将会有一个渐隐的动画；与此同时新的页只要加上.animate类就开始播放。这是通过js控制两个类来实现不同类型动画的切换。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200359_YCEuHhahlp.png" alt></p><p>那么问题是否出在这里呢？于是我把渐隐动画去掉，播放完的页面直接隐藏掉，不让动画播放，然后新动画调整到直接播放不渐现的效果。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200359_pKsgSyoszY.png" alt></p><p>最后发现，问题解决了！效果如图：</p><p><img src="http://i5.tietuku.com/99efe8cd0f84d559.gif" alt></p><p><strong>结论：</strong> 背后的动画可能会影响当前动画的播放，在安卓4.0系统都会产生渲染异常的问题，因此应该把不在当前播放的动画停掉。</p><blockquote><p>3.安卓逐帧渲染bug</p></blockquote><p>更多的性能问题都不会产生严重的表现，最多是一点卡顿。但是安卓4.0的渲染异常却是常会出现，为此我再找一个例子。以下是我做万圣节活动的时候发现的一个问题，具体表现直接上图：</p><p><img src="http://i5.tietuku.com/a5f8259b1854243f.gif" alt></p><p>这是魅族比较好的一台机器，但依然会产生逐帧渲染问题。<br>根据之前的例子，我第一时间会想到是否别的动画在影响？我看到这个动画作用钱有一个手一直摇一摇的动画，而且发现摇完后那个动画在背后是循环播放（infinite）的，一直没有结束。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200359_qUHAiW2AOc.png" alt></p><p>心想，只能是它了，于是我把它去掉：</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125200359_WyaTSZNmFS.png" alt></p><p>结果如我所想，页面终于流畅了：</p><p><img src="http://i5.tietuku.com/b1562b5528fa526d.gif" alt></p><p><strong>总结：</strong> 在性能检测的时候，有时候工具并不能帮到你，在找问题的时候也不要一味在当前页面找，很有可能是背后的一些无关代码在做着别的消耗性行为，因此在找不到问题的时候不妨从当前页的上下游入手。</p><h3 id="4-熟能生巧-性能优化的经验技巧"><a href="#4-熟能生巧-性能优化的经验技巧" class="headerlink" title="4.熟能生巧 - 性能优化的经验技巧"></a>4.熟能生巧 - 性能优化的经验技巧</h3><p>说了一些具体操作办法，最后来说一下我在开发过程中积累的经验。</p><blockquote><p>1.以下属性的更优解决方案</p></blockquote><p>左侧属性都很有可能会带来性能问题。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125163438_L12dD8en8M.png" alt></p><blockquote><p>2.动画坑点</p></blockquote><ul><li><p><strong>兄弟元素间动画互相影响</strong><br>当前播放的动画会因为其他结点动画还没结束而收到影响，安卓机器上会呈现逐帧渲染的表现。<br><code>解决办法</code>：处可视区域播放的动画外，将背后播放的动画display:none或者animation-play-state:pause。</p></li><li><p><strong>z-index设置不当</strong><br>兄弟元素在复合层中渲染，且z-index比主元素小，则主元素也会被加入到复合层渲染。<a href="http://div.io/topic/1348" target="_blank" rel="external">有篇文章</a>就是说这个问题。<br><code>解决办法</code>：给作用于动画的兄弟元素设置合理z-index值。</p></li></ul><blockquote><p>3.巧妙使用css动画</p></blockquote><p>这是一些用CSS3来解决一般JS效果的做法。</p><p><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125180542_lBifVRPPp3.png" alt><br><img src="http://qzonestyle.gtimg.cn/aoi/sola/20151125180542_CW2h7XMjmn.png" alt></p><blockquote><p>4.是否都要GPU加速？</p></blockquote><p>最后，讨论一下这个问题。开启GPU加速固然会让页面动画更流畅，但是否表示所有元素都要开启？肯定不是，会有以下几个缺点：</p><ul><li>盲目使用会让无关元素都渲染成复合层。</li><li>复合层渲染成位图消耗内存，也会耗时。</li><li>移动端手机会因此电量消耗更快。</li></ul><p>由此可见，如果使用GPU的元素很多，那么内存的消耗可能就远远大于动画的消耗，这就有点本末倒置了。因此，最好的办法是<strong>处理好动画层级，整合动画层一并开启GPU加速</strong>。</p><p>以上，感谢阅读，欢迎留言讨论。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;“你听说过动感影集么?”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;动感影集&lt;/code&gt;&lt;/strong&gt;是QQ空间新功能，可以将静态的图片轻松转变为动态的视频集，且载体是HTML5（简称H5）页面，意味着可以随时分享到空间或朋友圈给好友欣赏！&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="前端" scheme="https://tqtan.cafe/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="HTML5" scheme="https://tqtan.cafe/tags/HTML5/"/>
    
      <category term="前端" scheme="https://tqtan.cafe/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="开发者工具" scheme="https://tqtan.cafe/tags/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7/"/>
    
      <category term="性能分析" scheme="https://tqtan.cafe/tags/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>玩转HTML5移动页面</title>
    <link href="https://tqtan.cafe/2015/01/31/play-with-h5/"/>
    <id>https://tqtan.cafe/2015/01/31/play-with-h5/</id>
    <published>2015-01-31T13:12:23.000Z</published>
    <updated>2023-10-05T03:53:56.942Z</updated>
    
    <content type="html"><![CDATA[<p>标题起得有点大(๑´ㅂ`๑)，今天来谈谈H5移动页面的开发心得（技巧）。</p><p>一般情况下，拿到设计稿你有两种选择：<br>//条件表达式<br>产物＝设计稿处理？静态输出：让页面动起来；</p><p>作为一个有志向的前端，当然不会让页面生硬地静态展示啦(๑´ㅁ`)！可是需求时间又很短很短，怎么办呢？<br>所以下面的一些小技巧，至少能在你没有想法的时候让你的页面生动不少呢，同时也能确保你的页面不会出什么问题（后面有页面优化技巧）。</p><p>＝＝＝＝前方高能＝＝＝＝</p><blockquote><p>TIPS1 CSS3时序错开渐显动画</p></blockquote><p>这是一种比较常用的动画，它的优点是节奏感强，做法就是先让每个元素隐藏，然后当页面呈现后每个元素错开时间出现。<br>例子（这里忽略兼容前缀和别的无关属性）：<br><figure class="highlight"><pre><font face="monospace">&lt;div class=&quot;ele1&quot;&gt;&lt;/div&gt;&lt;div class=&quot;ele2&quot;&gt;&lt;/div&gt;</font></pre></figure></p><figure class="highlight"><pre><font face="monospace">.ele1,.ele2{opacity:0;position:absolute;left:50%;translate3D(-50%,0,0);}.ele1{top:30px;}.ele2{top:50px;}/*active&#x4E3A;&#x5F53;&#x524D;&#x9875;&#x9762;&#x5448;&#x73B0;&#x65F6;&#x52A0;&#x4E0A;&#x7684;&#x89E6;&#x53D1;&#x7C7B;*/.active .ele1,.active .ele2{animation:ele-show .5s linear forwards;}.active .ele1{animation-delay: .2s;}.active .ele2{animation-delay: .4s;}@keyframes ele-show{&#xA0;&#xA0;&#xA0;&#xA0;0% {opacity: 0.2;translate3D(-20px,0,0)}&#xA0;&#xA0;&#xA0;&#xA0;90% {opacity: 1;translate3D(5px,0,0)}&#xA0;&#xA0;&#xA0;&#xA0;100% {opacity: 1;translate3D(0px,0,0)}}</font></pre></figure><p>效果就是两个元素分别从上面掉下来，这里有个小细节（keyframes），为了让掉下来的动画生动点，应该是在90%的时候先掉下一点点，然后瞬间在100%时回跳5px。</p><p>注意这里还有个细节，安卓2.3.*不能良好支持-webkit-animation-fill-mode，也就是渐变动画不能停止在最后一帧。有这样一个解决方案：</p><p>1.用<a href="http://modernizr.com/" target="_blank" rel="external">Modernizr</a>去检测是否支持这个属性，加上识别类.no-animation-fill-mode；</p><p>2.根据识别类采取以下措施：</p><p>（1）用js模拟同样效果；</p><p>（2）用css屏蔽掉动画；</p><p>（3）或者直接全部都用transition来做（不要keyframes）。</p><p><a href="http://m.isux.us/qz-act/vip/20140903-qzonev5/m-index.html" target="_blank" rel="external">查看DEMO</a><br><img src="http://i2.tietuku.com/1f0dc60579c46d71.gif" alt="空间5.0预约第一版"><br><img src="http://i2.tietuku.com/dec7d1e0d040f05a.png" alt="空间5.0预约第一版二维码"></p><blockquote><p>TIPS2 CSS3细节强调动画</p></blockquote><p>一些局部细节如果还是渐现显示，会枯燥没什么感觉，例如标题、按钮等，需要一种强调。<br>分两种情况：</p><p>1.如果时间允许的话，基本做法是先把一个元素切成不同的块状，例如小人的手脚都切成不同图片（好残忍(つд⊂)），然后让它们重新组合，再通过赋予不同的CSS动画来让它生动起来，这里有个引用桑尼真（sunnycchen）的例子：</p><p><a href="http://www.sunnyzhen.com/course/demo/motorcycle/index.html" target="_blank" rel="external">查看DEMO</a><br><img src="http://i2.tietuku.com/c597b8498b793df2.gif" alt="桑尼真demo"><br><img src="http://i2.tietuku.com/6bb634ced24b6bce.png" alt="桑尼真demo二维码"></p><p>2.如果时间紧凑，又不像桑尼一样擅长于动画细节，可以使用一些辅助工具：<br><a href="http://daneden.github.io/animate.css/" target="_blank" rel="external">Animate.css</a>，通过直接预览选择想要的动效，然后下载它的CSS把对应keyframe扒下来就好了（引用整个CSS是资源浪费）。</p><blockquote><p>TIPS3 SVG动画</p></blockquote><p>SVG技术现在越来越不陌生，使用门槛也渐渐降低，而且SVG动画还是可以使用CSS控制的！<br>先看个给朋友庆生做的页面，里面是SVG的蛋糕：</p><p><a href="http://cyyis.me/" target="_blank" rel="external">查看DEMO</a><br><img src="http://i2.tietuku.com/a299cc3332aaf5bb.gif" alt="cyy"><br><img src="http://i2.tietuku.com/4a40875bd2208fc2.png" alt="cyy二维码"></p><p>可见SVG是很强大的！弥补了CSS3的不足。<br>然而这种动画也是略耗时，但有一种比较常用的，就是线条的描绘动画，CSS3比较难实现，这里可以用SVG，看图：</p><p><img src="http://i2.tietuku.com/4938f3e8a9f47beb.gif" alt="连线"></p><p>先介绍我们组的一个PS插件<a href="http://share.weiyun.com/d82e75215ed601986a63e16c6b6fc56a?pt=1" target="_blank" rel="external">svgArtisan</a>（该工具还没主页，暂时放在云盘），这个工具可以直接根据PSD的路径图层生成SVG图形。<br>接下来就简单了，先用插件生成线条的SVG，例如是这样的：</p><figure class="highlight"><pre><font face="monospace">&lt;svg version=&quot;1.1&quot; baseProfile=&quot;full&quot; id=&quot;m3path&quot; height=&quot;200px&quot; width=&quot;246px&quot;&gt;&#xA0;&#xA0;&#xA0;&#xA0;&lt;switch&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;path stroke=&quot;rgb( 130, 220, 218 )&quot; stroke-width=&quot;1px&quot; stroke-linecap=&quot;butt&quot; stroke-linejoin=&quot;miter&quot; fill=&quot;none&quot;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; d=&quot;M0.065,45.761 C0.065,45.761 206,0 206,0 C206,0 242.5,52.5 242.5,52.5 C242.5,52.5 199.5,142 199.5,142 C199.5,142 246,200 246,200&#xA0;&#xA0;&quot;/&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; &lt;foreignObject&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;div class=&quot;m3-svg-nosupport&quot;&gt;&lt;/div&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/foreignObject&gt;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/switch&gt;&lt;/svg&gt;</font></pre></figure><p>再使用CSS3的animation控制stroke-dashoffset：</p><figure class="highlight"><pre><font face="monospace">#m3path{stroke-dasharray: 1000;stroke-dashoffset: 1000;}.active #m3path{animation:dash 2.5s 1s linear forwards 1;}@keyframes dash {&#xA0;&#xA0; to {stroke-dashoffset: 0;}}</font></pre></figure><p>效果不难吧！SVG还有各种用途，例如制作ICONFONT等，可以深入挖掘。</p><blockquote><p>TIPS4 重力陀螺仪</p></blockquote><p>想让页面更有层次感，不妨让设计提供一些碎片元素，例如彩花，星星之类，然后把它们单独切出来放画面前景，使用陀螺仪伴随着手机运动碎片也跟着运动，多么好玩！<br>这里提供一个工具可以轻松实现陀螺仪重力效果的：<a href="http://matthew.wagerfield.com/parallax/" target="_blank" rel="external">parallax.js</a><br>用法简单，定义一个parallax-obj的父类，把需要动的元素加上layer的类，然后设置动的范围data-depth：</p><figure class="highlight"><pre><font face="monospace">&lt;div class=&quot;parallax-obj&quot;&gt;&#xA0;&#xA0;&#xA0;&#xA0;&lt;div class=&quot;layer ele-p1&quot; data-depth=&quot;1.00&quot;&gt;&lt;/div&gt;&#xA0;&#xA0;&#xA0;&#xA0;&lt;div class=&quot;layer ele-p2&quot; data-depth=&quot;0.80&quot;&gt;&lt;/div&gt;&#xA0;&#xA0;&#xA0;&#xA0;&lt;div class=&quot;layer ele-p3&quot; data-depth=&quot;0.30&quot;&gt;&lt;/div&gt;&#xA0;&#xA0;&#xA0;&#xA0;&lt;div class=&quot;layer ele-p4&quot; data-depth=&quot;0.30&quot;&gt;&lt;/div&gt;&#xA0;&#xA0;&#xA0;&#xA0;&lt;div class=&quot;layer ele-p5&quot; data-depth=&quot;1.10&quot;&gt;&lt;/div&gt;&lt;/div&gt;</font></pre></figure><p>最后只需要调用：$(‘.parallax-obj’).parallax();就一切OK了。</p><blockquote><p>TIPS5 背景音乐&amp;音效</p></blockquote><p>H5页面要炫酷，画面生动还是不够的，一定要配合生动的音乐。因此可以主动跟设计或产品沟通，让他们可以提供音乐资源，分分钟导致UV猛涨有木有！<br>当然，有了音乐，前端也不是直接引用的，还是有点要求：<br>1.音乐不宜过长，30s为佳，而且音乐要加上渐现渐隐效果，方便循环播放；<br>2.音乐体积要小，音质和流量，在手机上还是优先考虑流量吧。<br>一般背景音乐体积可以接受的范围是200K以下，若太大，可以使用格式工厂等软件，降低它的比特率和声道来改变体积。</p><p>接着，只需要简单引用：<br><figure class="highlight"><pre><font face="monospace">&lt;audio id=&quot;audio&quot; src=&quot;&#x97F3;&#x4E50;&#x5730;&#x5740;&quot; loop preload=&quot;auto&quot; autoplay=&quot;true&quot; class=&quot;hide&quot;&gt;&lt;/audio&gt;</font></pre></figure></p><p>这里有个问题，IOS是不能自动播放音乐的，一定要触发一个用户交互事件，例如点击，但是有一种自创的hack方法可以规避：<br>通过new一张图片，监听一张图片的onload事件，结束后回调执行音频播放audio.play()即可，原理估计是动了dom结构，相当于执行了一次交互。<br>最后，记得暴露一个音乐关闭/打开的按钮，不然肯定被用户骂死(°ﾛ°٥)。</p><blockquote><p>TIPS6 有趣的loading</p></blockquote><p>Loading页还是要有的，万一用户网速慢呢？<br>以上做了那么多事，如果没有资源加载都是玩不来的，因此还需要一个loading的支持。<br>然而loading还是可以做得很有趣的，一般的做法是：<br>1.引入品牌，例如APP宣传页；<br>2.引入有趣动画，放一个贱贱的人物跳舞给你看；<br>3.一切从简，用CSS3简单动画。</p><p>＝＝＝＝＝＝＝<br>休息区<br>说了那么多，来个例子吧（电脑上用Chrome模拟手机打开）：<br><a href="http://qzs.qq.com/qzone/qzact/act/qzapp/qzone5.0/mobile/index.html" target="_blank" rel="external">查看DEMO</a><br><img src="http://i2.tietuku.com/fc43c630e522b348.gif" alt="空间5.0预约页第二版"><br><img src="http://i2.tietuku.com/b179ebba3de090f2.png" alt="空间5.0预约页第二版二维码"></p><p>这是空间5.0预约页第二版，使用了以上的若干方法论，例如loading动画，CSS3动画，SVG星空连线，首屏星球重力感应，音乐（这里使用开启按钮后播放）等等。<br>（由于活动已结束，很多运营处都被删掉从简了，忽略那些细节）</p><p>在继续看下面的文字（页面优化技巧）之前，先问一个问题，如果还是感到页面很无趣怎么办？<br>这里提供一些工（gan）具（huo）吧：<br>1.<a href="https://tonytony.club/spark/" target="_blank" rel="external">SPARK动画平台</a>，这是我们组做的一个动画效果平台，里面集合了所有的牛逼动画，可以让你灵感猛增！（目前已开放外网使用）；<br>2.<a href="http://a.singlediv.com/" target="_blank" rel="external">OneDiv</a>，这是个神奇的网站，里面的所有细节都是用一个div元素通过复杂的Css3实现的，有空可以去开开脑洞噢；<br>3.<a href="http://cubic-bezier.com/" target="_blank" rel="external">贝塞尔曲线生成器</a>，动画速率太平怎么办？果断使用贝塞尔曲线来调节动画，这个网站可以帮你生成可视化的曲线。<br>还有各种神奇工具，还待你们自己发掘，我就不全部列出鸟。</p><p>当然，真正要做到高效制作动态H5页面，还是靠积累，因此平时做好的细节动画自己都积累起来，下次分分钟就能用得上。<br>＝＝＝＝＝＝＝</p><p>继续下文，是一些页面的优化细节技巧，这很关键噢！</p><blockquote><p>TIPS1 动画雪碧图</p></blockquote><p>涉及的动画十分多，用的元素也十分多，请务必使用雪碧图（Sprite）！<br>网上的工具十分多，例如涛哥（ytzong）的CssGaga，AlloyTeam的GoPng等等，自动化构建工具Grunt和Gulp也提供了相应插件。<br>这里要提一下的是如果页面图片实在太多，可以分雪碧图，例如分成1-3张，因为三张图片是可以同时加载的，这里牺牲多2个请求换来图片同时加载比一张图片慢慢加载要好。<br>顺便提一下，我写动画的方法是每一页的动画分在一个import.css里面，然后最后在主样式中import进去，这样方便调试动画，也容易区分雪碧图，例如：</p><figure class="highlight"><pre><font face="monospace">//style.css@import url(&quot;reset.import.css&quot;);@import url(&quot;loading.import.css&quot;);@import url(&quot;m-animate-1.import.css&quot;);@import url(&quot;m-animate-2.import.css&quot;);@import url(&quot;m-animate-3.import.css&quot;);</font></pre></figure><blockquote><p>TIPS2 图片压缩</p></blockquote><p>图片压缩是老生常谈，但是仍然有不少人忘记压缩，那可是活生生的带宽和流量浪费啊…<br>压缩图片需要有好工具，这里推荐我们做的一个工具<a href="http://zhitu.isux.us/" target="_blank" rel="external">智图</a>，相关介绍请看<a href="http://isux.tencent.com/zhitu.html" target="_blank" rel="external">ISUX官博文章</a>。<br>但是仍然有以下方式优化图片：<br>1.尽量避免用PNG24。如果图片色彩要求不高，请使用PNG8；<br>2.使用新格式，WEBP和BPG等新格式的到来，在不用考虑兼容的情况下请大胆尝试；<br>3.用SVG和ICONFONT代替简单的图标；<br>4.用糖饼和FUFU的<a href="http://font-spider.org/" target="_blank" rel="external">字蛛</a>来代替艺术字体切图。</p><blockquote><p>TIPS3 多终端兼容</p></blockquote><p>多终端兼容是一切的根基，要知道有人拿着肾6+，有人拿着肾4，大则414x736，小则320x416（IPHONE4在SAFARI保留上下端导航），因此多终端兼容是十分必要的。<br>曾经有一种派系为320派系，就是大部分页面都是320宽度，因此干脆直接用320的容器来包一切页面，那样也简单，然而IPHOEN6和IPHONE6+的出现简直是灭了这个派系。<br>那么到底要如何兼容呢？<br>这里我分了三个时期来说说：<br>（1）设计初期。先审视设计稿，因为320派系的原因，大部分设计稿只考虑到IPHONE5来设计，因此很多背景元素是只有320px宽度（页面实际渲染宽度），例如下图。<br><img src="http://i2.tietuku.com/becf2531354be61c.jpg" alt="320派例子"><br>那么，这时候就需要设计提供一个较长的延伸背景了，最好是可以重复的，用background-repeat可以减少图片大小。<br>（2）设计中期。也就是具体的兼容方法，可以使用CSS3 Media Query和类覆盖。<br>1.CSS3 Media Query，按范围兼容机型。</p><figure class="highlight"><pre><font face="monospace">/*iphone6*/@media only screen&#xA0;&#xA0;&#xA0;&#xA0;and (min-device-width : 375px)&#xA0;&#xA0;&#xA0;&#xA0;and (max-device-width : 667px)&#xA0;&#xA0;&#xA0;&#xA0;and (orientation : portrait)&#xA0;&#xA0;&#xA0;&#xA0;and (-webkit-min-device-pixel-ratio : 2){&#xA0;&#xA0;&#xA0;&#xA0;.page6 .ele-building{top: 69px;}&#xA0;&#xA0;&#xA0;&#xA0;.page6 .ele-runner{top: 100px;}&#xA0;&#xA0;&#xA0;&#xA0;.page6 .ele-pophome{top: 16px;}}</font></pre></figure><p>2.类覆盖，这种方式适合直接为小屏或大屏做整体兼容。</p><p>首先，为小屏（大屏）加一个识别类，这里小于420表示为小屏幕（IPHONE4有上下导航栏）：<br><figure class="highlight"><pre><font face="monospace">var bh = $(window).height();// 480 - 64 = 416 iphone4if(bh&lt;420){&#xA0;&#xA0;&#xA0;&#xA0;$(&apos;body&apos;).addClass(&apos;low-screen&apos;);}</font></pre></figure><br> 然后，对应识别类加上要变动的元素，例如：<br><figure class="highlight"><pre><font face="monospace">.page6 .ele-bg{top: 10px;}.low-screen .page6 .ele-bg{top: 0px;}</font></pre></figure></p><p>（3）设计后期。这是最后一步，整体检查和体验，这里面会暴露一些问题，例如元素在IPHONE6P显得小了或者元素在IPHONE4挤不下了，可以来最后大招解决：</p><p>1.大屏适当用zoom:倍率或者transform:scale(倍率)来增大元素，实测失真根本看不出来，设计师也满意（毕竟不用多做一张图( • ̀ω•́ )）；<br>2.小屏适当去掉一些元素，例如一些翻页提示，一些多余图标，可以让优雅降级，把它们 display:none掉。</p><p>有以上几步，基本就能兼容大部分机器了。兼容一直是个苦活，但是这是前端必修课，多练就会发觉其实也没有那么难嘛。</p><blockquote><p>TIPS4 交互提示</p></blockquote><p>前面说了，加了音效就要加上音乐切换开关的按钮，不然用户会骂死。还有其他，例如如果你的页面不能兼容横屏，请监听横屏状态，然后加上适当的横屏提示。<br>例如：</p><figure class="highlight"><pre><font face="monospace">// &#x6A2A;&#x5C4F;&#x76D1;&#x542C;var updateOrientation = function(){&#xA0;&#xA0;&#xA0;&#xA0;if(window.orientation==&apos;-90&apos; || window.orientation==&apos;90&apos;){&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;$(&apos;.landscape-wrap&apos;).removeClass(&apos;hide&apos;);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;console.log(&apos;&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x4F53;&#x9A8C;&#xFF0C;&#x8BF7;&#x5C06;&#x624B;&#x673A;/&#x5E73;&#x677F;&#x7AD6;&#x8FC7;&#x6765;&#xFF01;&apos;);&#xA0;&#xA0;&#xA0;&#xA0;}else{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;$(&apos;.landscape-wrap&apos;).addClass(&apos;hide&apos;);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;console.log(&apos;&#x7AD6;&#x5C4F;&#x72B6;&#x6001;&apos;);&#xA0;&#xA0;&#xA0;&#xA0;}};window.onorientationchange = updateOrientation;</font></pre></figure><p>提示越多，界面越友好，有时候设计师会漏掉一些可能出现的页面情况。作为有态度的前端，请好好把关，让用户有好的体验。</p><blockquote><p>TIPS5 分享接口</p></blockquote><p>H5做好了，要传播分享才能展示你的牛逼轰轰呀。然而分享一切是个坑，分享到微信、手Q、空间、微博等都有各种问题，为此我还写过一篇文章《HTML5页面分享功能》，里面有各种方法。<br>然而最近微信开放了微信API，分享功能越来越牛逼了，相信日后分享的坑会越来越少。</p><blockquote><p>TIPS6 SEO和无障碍</p></blockquote><p>SEO（搜索引擎优化）是个长谈啊，但基本的做法是写好meta标签，写好页面结构（H1-H6的层级树），用好语义化标签等等。<br>至于无障碍，是我薄弱的环节，还请Google各种文章，也希望各位前端能把这一块好好认识一下，并用于各产品。<br>其实分享接口，SEO，还有无障碍都基于良好的HTML结构，这是玩转页面的基础。</p><p>最后，罗嗦了这么多，只是我自己的一些小经验，请轻拍砖，多交流。<br>再次感谢你的阅读。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;标题起得有点大(๑´ㅂ`๑)，今天来谈谈H5移动页面的开发心得（技巧）。&lt;/p&gt;
&lt;p&gt;一般情况下，拿到设计稿你有两种选择：&lt;br&gt;//条件表达式&lt;br&gt;产物＝设计稿处理？静态输出：让页面动起来；&lt;/p&gt;
&lt;p&gt;作为一个有志向的前端，当然不会让页面生硬地静态展示啦(๑´ㅁ`
      
    
    </summary>
    
      <category term="前端" scheme="https://tqtan.cafe/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="HTML5" scheme="https://tqtan.cafe/tags/HTML5/"/>
    
      <category term="前端" scheme="https://tqtan.cafe/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="移动端" scheme="https://tqtan.cafe/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>chrome开发者工具秘籍</title>
    <link href="https://tqtan.cafe/2015/01/31/how-to-use-chrome-dev-tools/"/>
    <id>https://tqtan.cafe/2015/01/31/how-to-use-chrome-dev-tools/</id>
    <published>2015-01-31T13:12:23.000Z</published>
    <updated>2023-10-05T03:53:56.942Z</updated>
    
    <content type="html"><![CDATA[<p>转载自<a href="https://medium.com/jotform-form-builder/how-to-use-chrome-devtools-like-a-pro-b9bd414870e3" target="_blank" rel="external">这里</a></p><p>As the name implies Chrome Developer Tools is a tool that allows web developers to interfere and manipulate applications via the browser. With this tool you can:</p><p>Manage interface problems<br>Debug Javascript Code with using breakpoints<br>Optimize your code<br>To open DevTools, you can right-click anywhere on the page and select inspect element or you can choose the “tools &gt; developer tools” option from the top right menu.</p><p>The following examples are using the Canary version of Google Chrome.</p><h3 id="1-Quick-edit-a-HTML-Element"><a href="#1-Quick-edit-a-HTML-Element" class="headerlink" title="1.Quick-edit a HTML Element"></a>1.Quick-edit a HTML Element</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*lN5qcUffhV6rKtbbHCkYDQ.gif" alt="placeholder"></p><p>To try it:</p><p>Select the “Elements” panel.<br>Choose a DOM element within the Elements Panel editor.<br>Double click on the opening tag and edit it.<br>When you are finished, the closing tag is automatically updated.</p><h3 id="2-Go-to-a-Line-Number"><a href="#2-Go-to-a-Line-Number" class="headerlink" title="2.Go to a Line Number"></a>2.Go to a Line Number</h3><p><img src="https://cdn-images-2.medium.com/max/1600/1*q7AYPrZiy4pNqAtx4wfIjQ.gif" alt="placeholder"></p><p>You can use this feature in the “:linenumber:columnnumber” format from the Sources panel.</p><p>To try it:</p><p>CMD + O</p><h3 id="3-Expand-All-Child-Nodes"><a href="#3-Expand-All-Child-Nodes" class="headerlink" title="3.Expand All Child Nodes"></a>3.Expand All Child Nodes</h3><p><img src="https://cdn-images-2.medium.com/max/1600/1*GHjAdjdm0EArUJtQ8b6yaA.gif" alt="placeholder"></p><p>To try it:</p><p>Select the “Elements” panel.<br>Choose a DOM element and Alt + Click the arrow within the Elements Panel editor to expand all child nodes.</p><h3 id="4-Change-DevTools-Positions"><a href="#4-Change-DevTools-Positions" class="headerlink" title="4.Change DevTools Positions"></a>4.Change DevTools Positions</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*C5pSjlnuPKlj7AqCFYegXA.gif" alt="placeholder"></p><p>To try it:</p><p>CMD + Shift + D<br>Dock options:</p><p>Undock DevTools<br>Dock to bottom<br>Dock to right</p><h3 id="5-DOM-Search-by-CSS-Selectors"><a href="#5-DOM-Search-by-CSS-Selectors" class="headerlink" title="5.DOM Search by CSS Selectors"></a>5.DOM Search by CSS Selectors</h3><p><img src="https://cdn-images-2.medium.com/max/1536/1*HUQ6JRI0MCi01OAb8j4McA.gif" alt="placeholder"></p><p>To try it:</p><p>CMD + F / CTRL + F and enter your class name or id name base search selector.</p><h3 id="6-Material-and-Custom-Color-Palettes"><a href="#6-Material-and-Custom-Color-Palettes" class="headerlink" title="6.Material and Custom Color Palettes"></a>6.Material and Custom Color Palettes</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*tpY2vDczVvqK2Csuo5qtGg.gif" alt="placeholder"></p><p>You can click on the little switcher icon in front of hex code. you can choose from the following:</p><p>Page Colors: This palette is auto generated from your web site (in your CSS).<br>Material Design: This palette automatically generates primary colors from The Material Design palette.</p><h3 id="7-Multiple-Cursor"><a href="#7-Multiple-Cursor" class="headerlink" title="7.Multiple Cursor"></a>7.Multiple Cursor</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*WiFQ7-tDYzandeXZ3JOMwQ.gif" alt="placeholder"></p><p>Move the cursor with the CMD + Click to add multiple cursors. You can also undo your last selection with CMD + U.</p><h3 id="8-Copy-Image-as-Data-URI"><a href="#8-Copy-Image-as-Data-URI" class="headerlink" title="8.Copy Image as Data URI"></a>8.Copy Image as Data URI</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*OBMlbuZVBi5TgeF9oyLLRA.gif" alt="placeholder"></p><p>To try it:</p><p>Select “Network” panel.<br>Choose your image within the Resources Panel<br>Right click and copy it as a Data URI (base 64 encoded)</p><h3 id="9-Triggering-of-Pseudo-Classes"><a href="#9-Triggering-of-Pseudo-Classes" class="headerlink" title="9.Triggering of Pseudo Classes"></a>9.Triggering of Pseudo Classes</h3><p><img src="https://cdn-images-2.medium.com/max/1600/1*G-1-lRMFESz-ENozpJdorA.gif" alt="placeholder"></p><p>To try it:</p><p>Right click in the left panel and select “Force Element State”.<br>Alternatively, the toggle element state icon can be clicked in the right panel.</p><h3 id="10-Column-Selection-by-Dragging"><a href="#10-Column-Selection-by-Dragging" class="headerlink" title="10.Column Selection by Dragging"></a>10.Column Selection by Dragging</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*muclOluklH3o81-xeOEhUw.gif" alt="placeholder"></p><p>To try it:</p><p>Select “Sources” panel.<br>Choose your file within the Sources Panel editor.<br>Hold Alt and dragging the mouse.</p><h3 id="11-Get-the-current-element-with-“-0”"><a href="#11-Get-the-current-element-with-“-0”" class="headerlink" title="11.Get the current element with “$0”"></a>11.Get the current element with “$0”</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*TJW5VR8XJBM2cuJeOrshuw.gif" alt="placeholder"></p><p>To try it:</p><p>Select “Elements” panel.<br>Choose a DOM element within the Elements Panel editor.<br>Click Console and write $0 to access it.</p><h3 id="12-Reveal-in-Elements"><a href="#12-Reveal-in-Elements" class="headerlink" title="12.Reveal in Elements"></a>12.Reveal in Elements</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*GKEUuELnoGNvJSrvZ7qCKw.gif" alt="placeholder"></p><p>To try it, if you choose an a DOM node:</p><p>Right click on it within the Console panel.<br>Select “Reveal in Elements Panel”.</p><h3 id="13-View-Event-Listeners"><a href="#13-View-Event-Listeners" class="headerlink" title="13.View Event Listeners"></a>13.View Event Listeners</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*MFpJ-23b-s-mxSaiRTnooA.gif" alt="placeholder"></p><p>To try it:</p><p>Select the “Elements” panel.<br>Navigate to the Event Listeners and choose an event.<br>You can also view source by right click and choose “Show Function Definition” in context menu.</p><h3 id="14-Easing-Previews"><a href="#14-Easing-Previews" class="headerlink" title="14.Easing Previews"></a>14.Easing Previews</h3><p><img src="https://cdn-images-2.medium.com/max/1600/1*Kle8C4UmWrBqJ9K8COdh-A.gif" alt="placeholder"></p><p>To try it:</p><p>Click the easing icon (purple icon) and see a preview.<br>You can view it via choose other previews or you can set new easing format.</p><h3 id="15-Media-Query"><a href="#15-Media-Query" class="headerlink" title="15.Media Query"></a>15.Media Query</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*l0BK5HlImoCOw43ujXaSoQ.gif" alt="placeholder"></p><p>To try this:</p><p>In Device Mode, click the icon (‘bars’) in the upper left corner of the page.<br>Click the breakpoint (‘blue’, ‘green’, ‘orange’) bars and change.<br>If you right click on a bar, you can reveal its position within the source code.</p><h3 id="16-Network-Filmstrip"><a href="#16-Network-Filmstrip" class="headerlink" title="16.Network Filmstrip"></a>16.Network Filmstrip</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*ZYsWF7878SpwZii0kAVuEw.gif" alt="placeholder"></p><p>“Film Strip” shows page rendering screenshots and times from start to finish. You can click a screenshot and view in the timeline-style view.</p><p>To try this:</p><p>Select “Network” panel.<br>Click “Camera Icon”.<br>Reload page.</p><h3 id="17-Copy-Response"><a href="#17-Copy-Response" class="headerlink" title="17.Copy Response"></a>17.Copy Response</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*CeSZGgW6vudkS0t7h_JpkQ.gif" alt="placeholder"></p><p>You can copy the response/request headers of a network resource.</p><p>To try it:</p><p>Select “Network” panel.<br>Choose your file within the Resources Panel.<br>Right click and click “Copy Response”.</p><h3 id="18-Run-Predefined-Snippets"><a href="#18-Run-Predefined-Snippets" class="headerlink" title="18.Run Predefined Snippets"></a>18.Run Predefined Snippets</h3><p><img src="https://cdn-images-2.medium.com/max/1536/1*ltfQ2Lmqi5TMZGlgtM5NUg.gif" alt="placeholder"></p><p>To try it:</p><p>In the left sidebar: Sources &gt; Snippets<br>Right click &gt; Select New<br>Enter a file name and write your snippets in the right panel<br>Right click on the snippet and select Run</p><h3 id="19-Device-Emulation-Sensors"><a href="#19-Device-Emulation-Sensors" class="headerlink" title="19.Device Emulation Sensors"></a>19.Device Emulation Sensors</h3><p><img src="https://cdn-images-2.medium.com/max/2000/1*Pq5c916pATZGX1RHvgSSGw.gif" alt="placeholder"></p><p>You can also simulate mobile devices sensors like:</p><p>Touch Screen<br>Geolocation Coordinates<br>Accelerometer<br>To try this:</p><p>Select “Elements” panel.<br>Click “Esc” and choose “Emulation &gt; Sensors”</p><h3 id="20-Workspaces"><a href="#20-Workspaces" class="headerlink" title="20.Workspaces"></a>20.Workspaces</h3><p><img src="https://cdn-images-2.medium.com/max/1600/1*XVdO7V-TSeg_-Ezg9xbx-w.gif" alt="placeholder"></p><p>To try this:</p><p>Select “Sources” panel.<br>Right click within sources pane and choose “Add Folder to Workspace”<br>Choose your file and right click &gt; Map to Network Resources<br>Change your file code and view it.</p><p>References:</p><p><a href="https://developers.google.com/web/tools/chrome-devtools/" target="_blank" rel="external">https://developers.google.com/web/tools/chrome-devtools/</a><br><a href="https://umaar.com/dev-tips/" target="_blank" rel="external">https://umaar.com/dev-tips/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转载自&lt;a href=&quot;https://medium.com/jotform-form-builder/how-to-use-chrome-devtools-like-a-pro-b9bd414870e3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里
      
    
    </summary>
    
      <category term="前端" scheme="https://tqtan.cafe/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="chrome" scheme="https://tqtan.cafe/tags/chrome/"/>
    
      <category term="前端" scheme="https://tqtan.cafe/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="开发者工具" scheme="https://tqtan.cafe/tags/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>2014年终总结</title>
    <link href="https://tqtan.cafe/2015/01/01/summary-2014/"/>
    <id>https://tqtan.cafe/2015/01/01/summary-2014/</id>
    <published>2014-12-31T16:49:02.000Z</published>
    <updated>2023-10-05T03:53:56.943Z</updated>
    
    <content type="html"><![CDATA[<p>每年一篇年终总结，写一写2014我自己的变化。</p><blockquote><p>前方流水账高能，不喜者快逃离！</p></blockquote><p>实话说，今年是很不满意自己的一年。<br>有人说工作后会磨灭了青春的热情，我一直不相信，但是不得不承认。<br><code>少了一分狂妄，多了一分沉稳。</code><br>——我这样安慰自己。</p><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p>从实习到现在，已经不知不觉干了一年多了。<br>一年多以来干了很多事，但也没干很多事：</p><blockquote><p>干了啥</p></blockquote><ul><li>从PC前端慢慢由于业务问题转向了移动前端，移动相关技术算是从无到有，不知不觉把整套弄起来了，也沉淀了一些文章总结。</li><li>用Node玩了一些博客系统，一个基于WebSocket多终端实时预览的平台，还申请了个专利。</li><li>PHP新手但也勉强搭起了两个系统，折腾了两个框架。</li><li>H5api还在稳步研究并逐渐使用中，CSS黑科技也在不断折腾中。</li><li>研究了下Grunt，折腾了Gulp，玩了个插件。</li></ul><blockquote><p>没干啥</p></blockquote><ul><li>年前说好的弄起IOS，结果是由于各种事情荒废了。</li><li>SVG一只列在计划里，但只停留在使用工具生成的层面上。</li><li>HybridAPP一直说要弄起，却只停留在搭好了Cordova的demo阶段。</li><li>性能优化细节虽有逐渐加强，但仍然不足以沉淀成一套逻辑，或者一个检测工具。</li><li>说好的一些工具还没落地，计划没有完成好。</li></ul><p>干了什么是天经地义，没干什么就是自己的失败。<br>只能说，新技术敏锐度降低了，更重要的是时间管理能力差了不少。</p><h3 id="写作和阅读"><a href="#写作和阅读" class="headerlink" title="写作和阅读"></a>写作和阅读</h3><blockquote><p>写作</p></blockquote><p>写作和分享是最需要自责的地方。<br>2014年一共写作不超过<code>12篇</code>，分享不超过<code>6篇</code>，与大学相比真是弱爆了。<br>因此把旧博客targetkiller.net废弃掉，重新搭建了<a href="http://tqtan.com" target="_blank" rel="external">tqtan.com</a>新网站，就是要提醒自己，重新写起来。<br>之前看过一篇文章，<a href="http://www.ithome.com/html/it/122796.htm" target="_blank" rel="external">《为什么程序员应该养成写作的习惯？》</a>，我觉得很有道理。我的理解是，如果不常写作，就对生活缺少了一种<code>自己真正的理解</code>。</p><blockquote><p>阅读</p></blockquote><p>订阅RSS的GoogleReader和鲜果阅读器都相应关闭了后，我就没有再重新弄一个RSS阅读渠道。<br>微信公众账号也删去了不少，以往常去的36Kr，极客公园都很少打开了。<br>书架上新的书大概已经堆了7本，可见阅读缺失的严重。<br>归其原因是把阅读的时间用在了干其他事情，例如欣赏摄影网站，学习摄影，练习PS，研究咖啡等。<br>但是缺少阅读的生活，是难以看得出进步的生活，这值得自我愧疚。</p><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p>可幸的是，生活比以前要丰富了。</p><blockquote><p>摄影</p></blockquote><p>2014－6月买了第一台单反，开始跌跌爬爬学起了摄影。从光圈快门iso是什么都不会，开始不断拍，学习PS，LR等软件，开始慢慢了解色调，构图，情感等细节，也算是有点儿进步。<br>后来也斗胆把图片弄起来，放在了<a href="http://targetkiller.lofter.com" target="_blank" rel="external">Lofter</a>，接受大家的批评。<br><small style="color:#999;">这里要十分感谢所有合作拍摄的模特（朋友们）。</small></p><blockquote><p>咖啡</p></blockquote><p><del>一直有一个梦想，要开一家WIFI店，咖啡免费喝。</del><small style="color:#999;">（当然，搞笑而已）</small><br>但是咖啡一直是热爱的一种事物，与其说是饮品，它更应该是一种伴侣。<br>因此每次旅游都会去上当地的咖啡店感受一下，咖啡是一种文化，不只是那一口咖啡因。</p><p>真正认识咖啡，是在<code>四月咖啡</code>里，店长给我科普了一些咖啡的知识，也加强了我的兴趣，于是网上看了些文章，买起设备搞了起来。<br><small style="color:#999;">2015，希望自己能煮出越来越好的咖啡来。</small></p><blockquote><p>旅游</p></blockquote><p>虽然很俗，但还是因为<code>猫力</code>爱上了旅游，也因为旅游爱上了摄影。<br>应该每个人底子里都有一个周游世界的梦吧，我也是那么俗。</p><p>今年分别去了成都、杭州、上海、江西、青海、西藏、日本、韩国、苏州。<br><small style="color:#999;">旅游是净化自己最好的时机，希望心灵和肉身都能在路上。</small></p><blockquote><p>健身</p></blockquote><p>腹肌男是还没有达到，但也是进步了不少。<br>庆幸公司有免费的健身房，也有了诸如Bong手环和Nike Training等app的辅助，真是互联网改变生活啊。<br>但还是因为懒惰，没有养成周期习惯，2015要对自己狠一点。<br><small style="color:#999;">不求八块腹肌，只求无病无痛。<small></small></small></p><blockquote><p>乌克里里</p></blockquote><p>因为吹了个牛逼，说每年都要学一门新的技能，因此最近买了把ukelele，也算是2015的新计划，弥补自己对乐曲的不足吧。</p><h3 id="To-2015"><a href="#To-2015" class="headerlink" title="To 2015"></a>To 2015</h3><p>与其说总结，这更应该是一次自我审视。<br><code>2015，回归状态，勿忘初心。</code></p><p><img src="http://ww1.sinaimg.cn/large/005yyi5Jjw1eods6ueo88j3140140gqe.jpg" alt="tqtan"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每年一篇年终总结，写一写2014我自己的变化。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前方流水账高能，不喜者快逃离！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实话说，今年是很不满意自己的一年。&lt;br&gt;有人说工作后会磨灭了青春的热情，我一直不相信，但是不得不承认。&lt;br&gt;
      
    
    </summary>
    
      <category term="个人" scheme="https://tqtan.cafe/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
      <category term="2014" scheme="https://tqtan.cafe/tags/2014/"/>
    
      <category term="年终总结" scheme="https://tqtan.cafe/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
